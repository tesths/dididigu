<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Free on 迪迪咕咕</title>
    <link>http://localhost:1313/categories/free/</link>
    <description>Recent content in Free on 迪迪咕咕</description>
    <image>
      <title>迪迪咕咕</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh</language>
    <copyright>DiDi&amp;rsquo;s Website</copyright>
    <lastBuildDate>Thu, 26 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/free/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从0开始学习 GitHub 系列之「寻找代码」</title>
      <link>http://localhost:1313/posts/github-search-use/</link>
      <pubDate>Thu, 26 May 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/github-search-use/</guid>
      <description>张哥在写Github系列，看到了想帮张哥分担一下。正好工作室的学弟学妹们也需要会这个，就正好写个博客了。
因为我是iOS开发出生..所以我就从iOS的角度来写怎么用，不过放心，Android没有什么大的差别，我们后台的学弟都是这么干的！
看完张哥的文章，大概已经明白了Github是怎么使用的。但我想大部分人是想用Github里面的三方库，想去看看别人的开源项目的源代码，想去看看最近有没有什么新的牛逼的代码。但是怎么去找到这些东西呢。我想介绍的就是这方面的东西。
看Explore和Trending 大部分人的Github顶部栏可能是这样的&amp;hellip;
但我的是这样的&amp;hellip;
看到差别了吗？右上角我的比你们多了一个Explore&amp;hellip;记得我大二的时候Github改版，把Explore去掉了，当时好像骂声一片。有人开发了一款插件。Github Menu Back说白了这玩意就是在你的Github顶部栏加上Explore，然后把你的头像放左边。足以见到Explore的重要性（不过这玩意得网站加载差不多才能出来..）。当然了要是不愿意用这个，可以点击头像，里面也有。如下图
我们点击一个看看。
进去之后左上角有四个选项。
一个一个介绍哈。
第一个 Showcases 第一个其实就是这个界面，点过去没啥区别。
就是按照某个方面，比如Package managers（其实就是三方库的管理器）。点进去里面都是某门语言的包管理器，比如iOS的cocoapods，前端的npm，vim的vundle。类比到Android里面应该就是Gradle了。不过这里应该没有Gradle..
比如还有web application frameworks，其实就是后台框架，肯定有rails的。
具体我就不介绍了。可以点进去看。在最下面有More showcases。
第二个 Integrations Powerful integrations that help you and your team build software better, together.
其实就是一些工具的整合，可以更好的开发。
点进去里面有很多工具，比如Travis ci，这个现在用的很多，还有Github自家的编辑器Atom等等。
这个得自己发掘了..不多介绍。
第四个 Stars。 为啥跳第三个？因为第三个是重点&amp;hellip;重要的放最后。
点Stars就会进入你Star过的项目里啦。这没啥好介绍的。也就不截图了。
第三个 Trending。 好像有人曾经在知乎问过，程序员无聊的时候干什么。结果下面有人说，我逛Github能逛一上午&amp;hellip;自从我发现Trending之后，我发现我也可以！
Trending说白了，就是某个时间段里Github上被star数量最多的项目和仓库被star数量最多的开发者！
我要一点一点仔细的介绍这个！
首先是左上角的。
这两个，是切换仓库和开发者的。
这里是切换时间的，可以选择天，周，和月。也就是每天每周每月被star次数最多的仓库。我以前上过一次Trending..完全不知道它这个算法咋写的，莫名其妙就上了，当然我上的是天..
最牛逼的，是右边，右边！！
你以为这就结束了？作为一个职业的开发者，你当然要找到自己的方面。我最为一个iOS开发者，当然是Objective-C和Swift了，偶尔我也会看一看ruby的。当然了，安卓一定要看java了什么？没有java？选择other language即可
当日期选择天的时候，一般会是一些开发者在微博@一些大v，然后引起一时轰动的项目，当然也有大项目。这些项目一般来说我觉得吧，质量参差不齐，有的很好有的也就一般..
当日期选择月的时候，那基本上就是一些很牛逼的库了，这些库一般来说真的是，开发项目必备了。这个质量，那绝对是，刚刚的。
现在语言选java，选today看下。
我写博客的时候语言选择java的时候是这样的..这时候就能发现完整的开源项目代码了。还有一些新出的开源库。这个时候，一般我来说，看到我觉得不错的，果断下载下来阅读一下代码。觉得代码牛逼，立马star..都不带停顿的，有的库，我就直接star了..因为太牛逼看不懂。
Trending基本上我隔个几天就会看一次，有的时候闲了，每天都会看，真的一看一上午，因为有时候顺手就下载下来看看里面的代码，看看差距了..
我们再选个month看看。
第一个，我都知道谷歌出的flexbox-layout..你看我一做iOS的都知道，那基本上就是非常非常值得开发者去用和学习的库了。
Trending会了，基本上能发现不少牛逼的开源库和开源的项目。这样就有的学习了。
你以为到这大招就放完了吗？怎么可能。
awesome系列 上Github，怎么能不知道awesome系列，这可是Github上总star数排名第十二的仓库。到我写文章的时候，35714star。
当然衍生的有各种awesome&amp;hellip;比如awesome-ios，awesome-android，awesome-java，awesome-android
awesome。这玩意干啥的？简单的说，就是对某一个方面Github上的资源的汇总大贴！
不想上Trending查，那就上awesome，帮你解决一切问题。比如awesome-android上有网络请求库，json解析库等等一系列功能的汇总，当然了，还有完整项目的汇总，我就不找了..毕竟iOS出生，安卓不熟悉。
你以为到这大招就放完了吗？怎么可能。</description>
    </item>
    <item>
      <title>Mac安装Aircrack-ng</title>
      <link>http://localhost:1313/posts/mac-install-aircrackng/</link>
      <pubDate>Tue, 08 Sep 2015 20:06:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/mac-install-aircrackng/</guid>
      <description>9.4号中午去外面吃完冒菜回来都快三点了，这个点尴尬的不行。于是就去工作室倒腾点东西。也不想写代码，就开始各种在mac下装软件。项目基本上暂时没有什么要特别忙的，我也不能总写，都写了慎哥就没得写了。今晚上就把之前做的东西来个小记。
想到的是破译wifi，当然最终因为各种因素没破译成功。不过中间过程还是很享受的。下面开始。
百度了一下。有一篇MACOS苹果系统下破解无线网WPA,WPA2密码。用到的主要工具是Aircrack。于是就开始倒腾了。
安装macport 首先第一步要安装macport。macport据我理解，相当于homebrew，ubuntu下相当于apt-get install。根据官网来说，安装macport最简单的方法就是下载pkg文件直接安装，但是我在下载pkg安装过程中，会出现卡死的问题。google了半天没找到解决方法。于是就下载了源代码安装，这在官网上都有说明。前面什么安装xcode的command line tools那是装机必备我就不多说了。
下载之后在官网上有说明，解压之后进入目录，进行./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install 之后需要添加环境变量，我没看懂官网的说明，自行google了一下。看到很多人的博客都写过这个问题，我在此就摘录一下。
需要将/opt/local/bin和/opt/local/sbin添加到$PATH搜索路径中。然后编辑/etc/profile，这里需要超级用户。如果用vim的话需要wq！在profile里加入下面两句
export PATH=/opt/local/bin:$PATH
export PATH=/opt/local/sbin:$PATH
然后就可以了，如果要立即生效，那么需要利用source命令source /etc/profile
这样就可以用了，执行sudo port -v selfupdate更新。到这步会发现好像仿佛是被墙了。。。
安装proxychains 然后我又陷入了难题，好不容易手动编译安装成功了。结果更新好像被墙了咋办。查查查，命令行下使用代理的方法。找到一个东西，叫做proxychains。搜这个用了好久，因为我用的是ss，ss支持的时socks5，而iterm支持http，这就麻烦了。后来在v2ex上发现hzlzh问了这个问题。我就安装这个了。
安装proxychains4非常简单，直接用homebrew就可以了。brew install proxychains-ng 安装完毕要设置代理
修改/usr/local/etc/proxychains.conf 最下面 [ProxyList] socks5 127.0.0.1 1080 测试proxychain能不能用，proxychains4 curl twitter.com会显示ok。我就不截图了。
proxychain可以让它后面的命令行直接走代理的路线，而不用直接进行网络请求。 我刚刚用这个加上home cask装了macdown。还是很不错的。因为很多命令行是需要进行网络请求的。
之后就可以proxychains4 sudo port -v selfupdate了。可能有点慢，不过我这次可以正常了。
安装aircrack-ng 最后的最后，我们可以用sudo port install aircrack-ng就可以安装aircrack了。
好了，剩下的就是按照那个博客说的来破解了&amp;hellip;到这的时候我试了一下，但是班长突然打电话然我去取自行车，我就去了~后面的就没有后面了。
后面的安排 最近项目差不多算是完成了，后面的计划可能要调整一下状态，把RAC再看看，想看看动画，然后，继续开发下一个项目了~</description>
    </item>
  </channel>
</rss>
