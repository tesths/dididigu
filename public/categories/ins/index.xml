<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Ins on 迪迪咕咕</title>
    <link>http://localhost:1313/categories/ins/</link>
    <description>Recent content in Ins on 迪迪咕咕</description>
    <image>
      <title>迪迪咕咕</title>
      <url>http://localhost:1313/images/papermod-cover.png</url>
      <link>http://localhost:1313/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.131.0</generator>
    <language>zh</language>
    <copyright>DiDi&amp;rsquo;s Website</copyright>
    <lastBuildDate>Mon, 06 Aug 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/ins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>快捷指令下载 Instagram 图像及 Story（7.10 更新）</title>
      <link>http://localhost:1313/posts/ios-shortcuts-download-instagram-image/</link>
      <pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/ios-shortcuts-download-instagram-image/</guid>
      <description>7.10 更新 目前只需要在捷径最前面填写即可。详情见图！
6.2 更新 Story 下载两个地方都需要增加 Cookie 啦，见截图。
5.24 更新 Instagram 单独下载一条也需要登录了，单独下载一条设置 Cookie 的方式同 Story。
在查询了一些资料之后，我找到了 Instagram Story 的下载方式，并根据这个方式完成了 Workflow 的版本。感谢 instastories-backup项目。
原理 Instagram 是需要登录验证的，但实际经过我的测试，Instagram 只会检测 cookie 和 user-agent。那么只要在网络请求的 headers 加入 cookie 和 user-agent 实际上就可以了。
user-agent 是可以直接伪造的，而 cookie 值，需要通过网络版本的 chrome 获取。
在这个地方，cookie 建议使用自己的，或者是专门注册一个帐号用于下载。如果 cookie 泄露，理论上可以利用 cookie 对相应的用户进行数据篡改。
获取 cookie 打开 Chrome，进入到 www.instagram.com 并登录。
Windows 用户按 f12，Mac 用户按 option+cmd+j，打开控制台。
此时刷新页面，找到 www.instagram.com 的请求。找到 cookie，然后找到 sessionid。复制这串 140122&amp;hellip; （这串数字+字母+符号，每个人不同，有人可能是 5124&amp;hellip;等）如图所示。
然后把这么一长串，粘贴到捷径中最开始的 sessionid= 后面即可进行下载操作。</description>
    </item>
  </channel>
</rss>
